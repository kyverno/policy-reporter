loki:
  certificate: {{ .Values.target.loki.certificate | quote }}
  skipTLS: {{ .Values.target.loki.skipTLS }}
  path: {{ .Values.target.loki.path | quote }}
  secretRef: {{ .Values.target.loki.secretRef | quote }}
  mountedSecret: {{ .Values.target.loki.mountedSecret | quote }}
  minimumPriority: {{ .Values.target.loki.minimumPriority | quote }}
  skipExistingOnStartup: {{ .Values.target.loki.skipExistingOnStartup }}
  {{- with .Values.target.loki.customLabels }}
  customLabels:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  {{- with .Values.target.loki.sources }}
  sources:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  {{- with .Values.target.loki.filter }}
  filter:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  {{- with .Values.target.loki.headers }}
  headers:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  {{- with .Values.target.loki.channels }}
  channels:
    {{- toYaml . | nindent 4 }}
  {{- end }}

elasticsearch:
  certificate: {{ .Values.target.elasticsearch.certificate | quote }}
  skipTLS: {{ .Values.target.elasticsearch.skipTLS }}
  secretRef: {{ .Values.target.elasticsearch.secretRef | quote }}
  mountedSecret: {{ .Values.target.elasticsearch.mountedSecret | quote }}
  index: {{ .Values.target.elasticsearch.index | default "policy-reporter" | quote }}
  rotation: {{ .Values.target.elasticsearch.rotation | default "daily" | quote }}
  minimumPriority: {{ .Values.target.elasticsearch.minimumPriority | quote }}
  skipExistingOnStartup: {{ .Values.target.elasticsearch.skipExistingOnStartup }}
  {{- with .Values.target.elasticsearch.sources }}
  sources:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  {{- with .Values.target.elasticsearch.customFields }}
  customFields:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  {{- with .Values.target.elasticsearch.filter }}
  filter:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  {{- with .Values.target.elasticsearch.channels }}
  channels:
    {{- toYaml . | nindent 4 }}
  {{- end }}

slack:
  secretRef: {{ .Values.target.slack.secretRef | quote }}
  mountedSecret: {{ .Values.target.slack.mountedSecret | quote }}
  minimumPriority: {{ .Values.target.slack.minimumPriority | quote }}
  skipExistingOnStartup: {{ .Values.target.slack.skipExistingOnStartup }}
  {{- with .Values.target.slack.customFields }}
  customFields:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  {{- with .Values.target.slack.sources }}
  sources:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  {{- with .Values.target.slack.filter }}
  filter:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  {{- with .Values.target.slack.channels }}
  channels:
    {{- toYaml . | nindent 4 }}
  {{- end }}

discord:
  secretRef: {{ .Values.target.discord.secretRef | quote }}
  mountedSecret: {{ .Values.target.discord.mountedSecret | quote }}
  minimumPriority: {{ .Values.target.discord.minimumPriority | quote }}
  skipExistingOnStartup: {{ .Values.target.discord.skipExistingOnStartup }}
  {{- with .Values.target.discord.customFields }}
  customFields:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  {{- with .Values.target.discord.sources }}
  sources:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  {{- with .Values.target.discord.filter }}
  filter:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  {{- with .Values.target.discord.channels }}
  channels:
    {{- toYaml . | nindent 4 }}
  {{- end }}

teams:
  certificate: {{ .Values.target.teams.certificate | quote }}
  skipTLS: {{ .Values.target.teams.skipTLS }}
  secretRef: {{ .Values.target.teams.secretRef | quote }}
  mountedSecret: {{ .Values.target.teams.mountedSecret | quote }}
  minimumPriority: {{ .Values.target.teams.minimumPriority | quote }}
  skipExistingOnStartup: {{ .Values.target.teams.skipExistingOnStartup }}
  {{- with .Values.target.teams.customFields }}
  customFields:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  {{- with .Values.target.teams.sources }}
  sources:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  {{- with .Values.target.teams.filter }}
  filter:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  {{- with .Values.target.teams.channels }}
  channels:
    {{- toYaml . | nindent 4 }}
  {{- end }}

webhook:
  certificate: {{ .Values.target.webhook.certificate | quote }}
  skipTLS: {{ .Values.target.webhook.skipTLS }}
  secretRef: {{ .Values.target.webhook.secretRef | quote }}
  mountedSecret: {{ .Values.target.webhook.mountedSecret | quote }}
  minimumPriority: {{ .Values.target.webhook.minimumPriority | quote }}
  skipExistingOnStartup: {{ .Values.target.webhook.skipExistingOnStartup }}
  {{- with .Values.target.webhook.headers }}
  headers:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  {{- with .Values.target.webhook.sources }}
  sources:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  {{- with .Values.target.webhook.customFields }}
  customFields:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  {{- with .Values.target.webhook.filter }}
  filter:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  {{- with .Values.target.webhook.channels }}
  channels:
    {{- toYaml . | nindent 4 }}
  {{- end }}

telegram:
  chatID: {{ .Values.target.telegram.chatID | quote }}
  certificate: {{ .Values.target.telegram.certificate | quote }}
  skipTLS: {{ .Values.target.telegram.skipTLS }}
  secretRef: {{ .Values.target.telegram.secretRef | quote }}
  mountedSecret: {{ .Values.target.telegram.mountedSecret | quote }}
  minimumPriority: {{ .Values.target.telegram.minimumPriority | quote }}
  skipExistingOnStartup: {{ .Values.target.telegram.skipExistingOnStartup }}
  {{- with .Values.target.telegram.headers }}
  headers:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  {{- with .Values.target.telegram.sources }}
  sources:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  {{- with .Values.target.telegram.customFields }}
  customFields:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  {{- with .Values.target.telegram.filter }}
  filter:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  {{- with .Values.target.telegram.channels }}
  channels:
    {{- toYaml . | nindent 4 }}
  {{- end }}

googleChat:
  webhook: {{ .Values.target.googleChat.webhook | quote }}
  certificate: {{ .Values.target.googleChat.certificate | quote }}
  skipTLS: {{ .Values.target.googleChat.skipTLS }}
  secretRef: {{ .Values.target.googleChat.secretRef | quote }}
  mountedSecret: {{ .Values.target.googleChat.mountedSecret | quote }}
  minimumPriority: {{ .Values.target.googleChat.minimumPriority | quote }}
  skipExistingOnStartup: {{ .Values.target.googleChat.skipExistingOnStartup }}
  {{- with .Values.target.googleChat.headers }}
  headers:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  {{- with .Values.target.googleChat.sources }}
  sources:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  {{- with .Values.target.googleChat.customFields }}
  customFields:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  {{- with .Values.target.googleChat.filter }}
  filter:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  {{- with .Values.target.googleChat.channels }}
  channels:
    {{- toYaml . | nindent 4 }}
  {{- end }}

ui:
  host: {{ include "policyreporter.uihost" . }}
  certificate: {{ .Values.target.ui.certificate | quote }}
  skipTLS: {{ .Values.target.ui.skipTLS }}
  minimumPriority: {{ .Values.target.ui.minimumPriority | quote }}
  skipExistingOnStartup: {{ .Values.target.ui.skipExistingOnStartup }}
  {{- with .Values.target.ui.sources }}
  sources:
    {{- toYaml . | nindent 4 }}
  {{- end }}

s3:
  secretRef: {{ .Values.target.s3.secretRef | quote }}
  mountedSecret: {{ .Values.target.s3.mountedSecret }}
  region: {{ .Values.target.s3.region }}
  endpoint: {{ .Values.target.s3.endpoint }}
  bucket: {{ .Values.target.s3.bucket }}
  bucketKeyEnabled: {{ .Values.target.s3.bucketKeyEnabled }}
  serverSideEncryption: {{ .Values.target.s3.serverSideEncryption }}
  pathStyle: {{ .Values.target.s3.pathStyle }}
  prefix: {{ .Values.target.s3.prefix }}
  minimumPriority: {{ .Values.target.s3.minimumPriority | quote }}
  skipExistingOnStartup: {{ .Values.target.s3.skipExistingOnStartup }}
  {{- with .Values.target.s3.sources }}
  sources:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  {{- with .Values.target.s3.customFields }}
  customFields:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  {{- with .Values.target.s3.filter }}
  filter:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  {{- with .Values.target.s3.channels }}
  channels:
    {{- toYaml . | nindent 4 }}
  {{- end }}

kinesis:
  secretRef: {{ .Values.target.kinesis.secretRef | quote }}
  mountedSecret: {{ .Values.target.kinesis.mountedSecret | quote }}
  region: {{ .Values.target.kinesis.region }}
  endpoint: {{ .Values.target.kinesis.endpoint }}
  streamName: {{ .Values.target.kinesis.streamName }}
  minimumPriority: {{ .Values.target.kinesis.minimumPriority | quote }}
  skipExistingOnStartup: {{ .Values.target.kinesis.skipExistingOnStartup }}
  {{- with .Values.target.kinesis.sources }}
  sources:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  {{- with .Values.target.kinesis.customFields }}
  customFields:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  {{- with .Values.target.kinesis.filter }}
  filter:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  {{- with .Values.target.kinesis.channels }}
  channels:
    {{- toYaml . | nindent 4 }}
  {{- end }}

securityHub:
  delayInSeconds: {{ .Values.target.securityHub.delayInSeconds }}
  cleanup: {{ .Values.target.securityHub.cleanup }}
  secretRef: {{ .Values.target.securityHub.secretRef | quote }}
  mountedSecret: {{ .Values.target.securityHub.mountedSecret | quote }}
  productName: {{ .Values.target.securityHub.productName | quote }}
  companyName:  {{ .Values.target.securityHub.companyName | quote }}
  region: {{ .Values.target.securityHub.region }}
  endpoint: {{ .Values.target.securityHub.endpoint }}
  minimumPriority: {{ .Values.target.securityHub.minimumPriority | quote }}
  skipExistingOnStartup: {{ .Values.target.securityHub.skipExistingOnStartup }}
  {{- with .Values.target.securityHub.sources }}
  sources:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  {{- with .Values.target.securityHub.customFields }}
  customFields:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  {{- with .Values.target.securityHub.filter }}
  filter:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  {{- with .Values.target.securityHub.channels }}
  channels:
    {{- toYaml . | nindent 4 }}
  {{- end }}

gcs:
  credentials: {{ .Values.target.gcs.credentials }}
  secretRef: {{ .Values.target.gcs.secretRef | quote }}
  mountedSecret: {{ .Values.target.gcs.mountedSecret | quote }}
  bucket: {{ .Values.target.gcs.bucket }}
  prefix: {{ .Values.target.gcs.prefix }}
  minimumPriority: {{ .Values.target.gcs.minimumPriority | quote }}
  skipExistingOnStartup: {{ .Values.target.gcs.skipExistingOnStartup }}
  {{- with .Values.target.gcs.sources }}
  sources:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  {{- with .Values.target.gcs.customFields }}
  customFields:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  {{- with .Values.target.gcs.filter }}
  filter:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  {{- with .Values.target.gcs.channels }}
  channels:
    {{- toYaml . | nindent 4 }}
  {{- end }}

worker: {{ .Values.worker }}

metrics:
  mode: {{ .Values.metrics.mode }}
  {{- with .Values.metrics.filter }}
  filter:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  {{- with .Values.metrics.customLabels }}
  customLabels:
    {{- toYaml . | nindent 4 }}
  {{- end }}

reportFilter:
  namespaces:
    {{- with .Values.reportFilter.namespaces.include }}
    include:
      {{- toYaml . | nindent 6 }}
    {{- end }}
    {{- with .Values.reportFilter.namespaces.exclude }}
    exclude:
      {{- toYaml . | nindent 6 }}
    {{- end }}
  clusterReports:
    disabled: {{ .Values.reportFilter.clusterReports.disabled }}

leaderElection:
  enabled: {{ or .Values.leaderElection.enabled (gt (int .Values.replicaCount) 1) }}
  releaseOnCancel: {{ .Values.leaderElection.releaseOnCancel }}
  leaseDuration: {{ .Values.leaderElection.leaseDuration }}
  renewDeadline: {{ .Values.leaderElection.renewDeadline }}
  retryPeriod: {{ .Values.leaderElection.retryPeriod }}

redis:
  enabled: {{ .enabled }}
  address: {{ .address }}
  database: {{ .database }}
  prefix: {{ .prefix }}

{{- with .Values.sourceConfig }}
sourceConfig:
  {{- toYaml . | nindent 2 }}
{{- end }}


logging:
  encoding: {{ .Values.logging.encoding }}
  logLevel: {{ include "policyreporter.logLevel" . }}
  development: {{ .Values.logging.development }}

api:
  logging: {{ .Values.api.logging }}
  basicAuth:
    secretRef: {{ .Values.global.basicAuth.secretRef }}

database:
  type: {{ .Values.database.type }}
  database: {{ .Values.database.database }}
  host: {{ .Values.database.host }}
  enableSSL: {{ .Values.database.enableSSL }}
  dsn: {{ .Values.database.dsn }}
  secretRef: {{ .Values.database.secretRef }}
  mountedSecret: {{ .Values.database.mountedSecret }}
