apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "policyreporter.fullname" . }}
  namespace: policy-reporter
  labels:
    {{- include "policyreporter.labels" . | nindent 4 }}
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "policyreporter.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "policyreporter.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "policyreporter.serviceAccountName" . }}
      automountServiceAccountToken: true
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          args:
            - run
            - --loki={{ .Values.loki.host }}
            {{- if .Values.loki.minimumPriority }}
            - --loki-minimum-priority={{ .Values.loki.minimumPriority }}
            {{- end }}
            {{- if .Values.loki.skipExistingOnStartup }}
            - --loki-skip-exising-on-startup
            {{- end }}
          ports:
            - name: http
              containerPort: 2112
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /metrics
              port: http
          readinessProbe:
            httpGet:
              path: /metrics
              port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
          - name: config-volume
            mountPath: /app/config.yaml
            subPath: config.yamlÂ´
      volumes:
      - name: config-volume
        configMap:
          name: policy-reporter-config
          optional: true