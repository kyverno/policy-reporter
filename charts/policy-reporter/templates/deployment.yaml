apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "policyreporter.fullname" . }}
  labels:
    {{- include "policyreporter.labels" . | nindent 4 }}
  {{- if .Values.annotations }}
  annotations:
    {{- toYaml .Values.annotations | nindent 4 }}
  {{- end }}
spec:
  replicas: {{ .Values.replicaCount }}
  {{- if .Values.deploymentStrategy }}
  strategy:
    {{- toYaml .Values.deploymentStrategy | nindent 4 }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "policyreporter.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "policyreporter.selectorLabels" . | nindent 8 }}
        {{- with .Values.podLabels }}
          {{- toYaml . | nindent 8 }}
        {{- end }}
        {{- with .Values.global.labels }}
          {{- toYaml . | nindent 8 }}
        {{- end }}
      annotations:
        checksum/secret: {{ include (print .Template.BasePath "/targetssecret.yaml") . | sha256sum | quote }}
        policy-priorities/enabled: {{ .Values.policyPriorities.enabled | quote }}
        {{- with .Values.podAnnotations }}
          {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "policyreporter.serviceAccountName" . }}
      automountServiceAccountToken: true
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          {{- if .Values.securityContext }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          {{- end }}
          args:
            - --config=/app/config.yaml
          ports:
            - name: http
              containerPort: 2112
              protocol: TCP
            - name: rest
              containerPort: 8080
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /ready
              port: rest
          readinessProbe:
            httpGet:
              path: /healthz
              port: rest
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
          - name: config-file
            mountPath: /app/config.yaml
            subPath: config.yaml
          env:
          - name: NAMESPACE
            value: {{ .Release.Namespace }}
      volumes:
      - name: config-file
        secret:
          secretName: {{ include "policyreporter.fullname" . }}-targets
          optional: true
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
