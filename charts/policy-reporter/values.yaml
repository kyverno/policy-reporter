image:
  repository: fjogeleit/policy-reporter
  pullPolicy: IfNotPresent
  tag: 1.3.4

imagePullSecrets: []

# Deploy not more than one replica
# Policy Reporter doesn't scale yet.
# Each pod will report each change.
replicaCount: 1

deploymentStrategy: {}
  # rollingUpdate:
  #  maxSurge: 25%
  #  maxUnavailable: 25%
  # type: RollingUpdate

# Key/value pairs that are attached to Deployment.
annotations: {}

# Create cluster role policies
rbac:
  enabled: true

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

service:
  enabled: true
  ## configuration of service
  # key/value
  annotations: {}
  # key/value
  labels: {}
  type: ClusterIP
  # integer nubmer. This is port for service
  port: 2112

securityContext:
  runAsUser: 1234
  runAsNonRoot: true
  privileged: false
  allowPrivilegeEscalation: false
  readOnlyRootFilesystem: true
  capabilities:
    drop:
      - all

# Key/value pairs that are attached to pods.
podAnnotations: {}

# Key/value pairs that are attached to pods.
podLabels: {}

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   memory: 30Mi
  #   cpu: 10m
  # requests:
  #   memory: 20Mi
  #   cpu: 5m

# enable policy-report-ui
ui:
  enabled: false

monitoring:
  enabled: false
  namespace: cattle-dashboards

  serviceMonitor:
    # labels to match the serviceMonitorSelector of the Prometheus Resource
    labels: {}

global:
  # The name of service policy-report. If you changed ReleaseName you have to replace it
  backend: policy-reporter
  # Service Port number
  port: 8080

# PolicyReport CRD Version to use
crdVersion: v1alpha1

# Dounce Time in seconds for Modify Events after a cleanup event (Report with 0 Results)
# Used to prevent Policy Reporter from resending existing violations after Kyverno recreates PolicyReports
# When an existing Report get an Modify Event with 0 results it waits for the defined amount of time
# for new Report Events and process the latest incomming Event for this Report which should be the complete recreated Report
# the required amount of time can be different depending on the amount of validated resources and policies
cleanupDebounceTime: 20

api:
  enabled: false

# Policy Priorities
policyPriorities:
  enabled: false
  # configure mappings from policy to priority
  # you can use default to configure a default priority not passing results
  # example mapping
  #   default: warning
  #   require-ns-labels: error
  mapping: {}

# Supported targets for new PolicyReport Results
target:
  loki:
    # loki host address
    host: ""
    # minimum priority "" < info < warning < critical < error
    minimumPriority: ""
    # Skip already existing PolicyReportResults on startup
    skipExistingOnStartup: true

  elasticsearch:
    # elasticsearch host address
    host: ""
    # elasticsearch index (default: policy-reporter)
    index: ""
    # elasticsearch index rotation and index suffix
    # possible values: dayli, monthly, annually, none (default: dayli)
    rotation: ""
    # minimum priority "" < info < warning < critical < error
    minimumPriority: ""
    # Skip already existing PolicyReportResults on startup
    skipExistingOnStartup: true

  slack:
    # slack app webhook address
    webhook: ""
    # minimum priority "" < info < warning < critical < error
    minimumPriority: ""
    # Skip already existing PolicyReportResults on startup
    skipExistingOnStartup: true

  discord:
    # discord app webhook address
    webhook: ""
    # minimum priority "" < info < warning < critical < error
    minimumPriority: ""
    # Skip already existing PolicyReportResults on startup
    skipExistingOnStartup: true

  teams:
    # teams webhook address
    webhook: ""
    # minimum priority "" < info < warning < critical < error
    minimumPriority: ""
    # Skip already existing PolicyReportResults on startup
    skipExistingOnStartup: true

  ui:
    # teams webhook address
    host: ""
    # minimum priority "" < info < warning < critical < error
    minimumPriority: "warning"
    # Skip already existing PolicyReportResults on startup
    skipExistingOnStartup: true

# Node labels for pod assignment
# ref: https://kubernetes.io/docs/user-guide/node-selection/
nodeSelector: {}

# Tolerations for pod assignment
# ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
tolerations: []

# Anti-affinity to disallow deploying client and master nodes on the same worker node
affinity: {}
